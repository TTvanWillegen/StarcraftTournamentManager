group 'nl.tobyvanwillegen'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}
configurations {
    checkerFrameworkJavac {
        description = 'a customization of the Open JDK javac compiler with additional support for type annotations'
    }
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
    checkerFramework {
        description = 'The Checker Framework: custom pluggable types for Java'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    ext.checkerFrameworkVersion = '2.2.0'
    ext.jdkVersion = JavaVersion.current().isJava8() ? 'jdk8' : 'jdk9'
    checkerFrameworkAnnotatedJDK "org.checkerframework:${jdkVersion}:${checkerFrameworkVersion}"
    checkerFrameworkJavac "org.checkerframework:compiler:${checkerFrameworkVersion}"
    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
}

tasks.withType(JavaCompile).all { JavaCompile compile ->
    compile.options.compilerArgs = [
            '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
            '-processorpath', "${configurations.checkerFramework.asPath}",
            // uncomment to turn Checker Framework errors into warnings
            //'-Awarns',
            "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}",
            '-source', '8', '-target', '8'
    ]
    options.fork = true
    options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.checkerFrameworkJavac.asPath}"]
}